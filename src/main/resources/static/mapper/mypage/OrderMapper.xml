<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookstore.mypage.mapper.OrderMapper">

    <!-- 구매 예정 도서 정보 장바구니 저장 -->
    <insert id="addCart" parameterType="com.bookstore.mypage.domain.CartDto">
        INSERT INTO cart(member_email, book_orderCount, book_num)
        VALUES (#{memberEmail}, #{bookOrderCount}, #{bookNum})
    </insert>

    <select id="readCartInfo" parameterType="String" resultType="com.bookstore.mypage.domain.CartDto">
        SELECT *
        FROM cart
        WHERE member_email = #{memberEmail}
    </select>

    <delete id="deleteCartInfo" parameterType="int">
        DELETE
        FROM cart
        WHERE cart_num = ${cartNum}
    </delete>

    <!-- 도서 검색 상세 페이지 출력 -->
    <select id="searchBookByBookNum" parameterType="int" resultType="com.bookstore.mypage.domain.CartDto">
        SELECT book_num, book_title, book_price, book_pictureUrl, book_thumbUrl
        FROM book
        WHERE book_num = #{bookNum}
    </select>

    <!-- 메인 배송주소 정보 검색  -->
    <select id="searchMainAddressByMemberEmail" parameterType="String" resultType="com.bookstore.mypage.domain.AddressDto">
        SELECT *
        FROM address
        WHERE memberEmail = #{memberEmail} AND address_checkMain = 'MAIN'
    </select>

    <!-- 추가된 배송주소 정보 검색 -->
    <select id="searchAddedAddressByMemberEmail" parameterType="String" resultType="com.bookstore.mypage.domain.AddressDto">
        SELECT *
        FROM address
        WHERE memberEmail = #{memberEmail} AND address_checkMain = 'ADDITION'
        ORDER BY IFNULL(address_registerDate, 0) DESC
    </select>

    <!-- 배송주소 등록 -->
    <insert id="registerAddress" parameterType="com.bookstore.mypage.domain.AddressDto">
        INSERT INTO address(memberEmail, receiver_address, receiver_name, receiver_phone, address_checkMain)
        VALUES (#{memberEmail}, #{receiverAddress}, #{receiverName}, #{receiverPhone}, #{addressCheckMain})
    </insert>

    <!-- 배송주소 수정 -->
    <update id="updateAddress" parameterType="com.bookstore.mypage.domain.AddressDto">
        UPDATE address
        SET receiver_name = #{receiverName}, receiver_address = #{receiverAddress}, receiver_phone = #{receiverPhone}
        WHERE memberEmail = #{memberEmail}
    </update>

    <!-- 도서 주문 정보 등록   -->
    <insert id="registerOrderInfo" parameterType="com.bookstore.mypage.domain.PayInfoDto">
        INSERT INTO `order`(order_totalPrice, order_totalCount, member_email, member_address, member_name, order_number, member_rank)
        VALUES (#{orderTotalPrice}, #{orderTotalBookCount}, #{memberEmail}, #{receiverAddress}, #{receiverName}, #{orderNumber}, #{memberRank});
    </insert>

    <!-- 도서 판매량 및 재고 업데이트 -->
    <update id="updateBookInfo" parameterType="com.bookstore.mypage.domain.OrderDto">
        UPDATE book
        SET book_sellCount = book_sellCount + #{bookOrderCount}, book_stock = book_stock - #{bookOrderCount}
        WHERE book_num = #{bookNum}
    </update>

    <!-- 고객 포인트 수정 -->
    <update id="updateMemberPointInfo" parameterType="com.bookstore.mypage.domain.PayInfoDto">
        UPDATE member
        SET member_point = member_point - #{orderTotalPrice}
        WHERE member_email = #{memberEmail}
    </update>

    <!-- 포인트 사용 내역 등록 -->
    <insert id="registerPointUse" parameterType="com.bookstore.mypage.domain.PayInfoDto">
        INSERT INTO point(member_Email, point_use, point_current)
        VALUES (#{memberEmail}, #{orderTotalPrice}, #{memberPoint})
    </insert>

    <select id="searchMemberPointSum" parameterType="String" resultType="int">
        SELECT SUM(point_use)
        FROM point
        WHERE member_Email = #{memberEmail}
        GROUP BY member_Email
    </select>

    <update id="upgradeMemberRank">
        UPDATE member
        SET member_rank = #{memberRank}
        WHERE member_email = #{memberEmail}
    </update>

    <insert id="registerOrderBookInfo" parameterType="com.bookstore.mypage.domain.OrderDto">
        INSERT INTO order_book(order_number, book_num, book_orderCount)
        values (#{orderNumber}, #{bookNum}, #{bookOrderCount})
    </insert>



    <!-- 주문내역 리스트 출력 -->
    <select id="searchMyOrderList" parameterType="com.bookstore.common.utils.SearchCondition" resultMap="OrderList">
        SELECT a.order_number, count(b.order_number) as 'book_typeCount', order_date, ANY_VALUE(book_title) as 'book_title', ANY_VALUE(member_name) as 'member_name', ANY_VALUE(member_address) as 'member_address', ANY_VALUE(order_state) as 'order_state'
        FROM `order` a
        LEFT JOIN  order_book b ON a.order_number = b.order_number LEFT JOIN book c ON b.book_num = c.book_num
        WHERE member_email = #{memberEmail}
        <if test='option == "T"'>
            AND book_title LIKE concat('%', #{keyword}, '%')
        </if>
        <if test='option == "R"'>
            AND member_name LIKE concat('%', #{keyword}, '%')
        </if>
        <if test='startDate != null and startDate != "" and endDate != null and endDate != "" '>
            AND DATE(order_date) BETWEEN #{startDate} AND #{endDate}
        </if>
        GROUP BY a.order_number, a.order_date
        ORDER BY order_date DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <resultMap id="OrderList" type="com.bookstore.mypage.domain.OrderDto">
        <result column="order_number" property="orderNumber"/>
        <result column="book_typeCount" property="bookTypeCount"/>
        <result column="order_date" property="orderDate"/>
        <result column="order_state" property="orderState"/>
        <result column="book_orderCount" property="bookOrderCount"/>
        <result column="member_email" property="memberEmail"/>
        <result column="member_name" property="memberName"/>
        <result column="member_registerDate" property="memberRegisterDate"/>
        <result column="member_address" property="memberAddress"/>
        <collection property="cartInfoList" resultMap="BookInfo"/>
    </resultMap>

    <resultMap id="BookInfo" type="com.bookstore.mypage.domain.CartDto">
        <result column="book_num" property="bookNum"/>
        <result column="book_title" property="bookTitle"/>
        <result column="book_price" property="bookPrice"/>
        <result column="book_pictureUrl" property="bookPictureUrl"/>
        <result column="book_thumbUrl" property="bookThumbUrl"/>
    </resultMap>

    <!-- 주문내역 개수 확익 -->
    <select id="searchOrderResultCnt" parameterType="com.bookstore.common.utils.SearchCondition" resultType="int">
        SELECT count(*)
        FROM (
            SELECT a.order_number
            FROM `order` a
            LEFT JOIN  order_book b ON a.order_number = b.order_number LEFT JOIN book c ON b.book_num = c.book_num
            WHERE member_email = #{memberEmail}
            <if test='option == "T"'>
                AND book_title LIKE concat('%', #{keyword}, '%')
            </if>
            <if test='option == "R"'>
                AND member_name LIKE concat('%', #{keyword}, '%')
            </if>
            <if test='startDate != null and startDate != "" and endDate != null and endDate != "" '>
                AND DATE(order_date) BETWEEN #{startDate} AND #{endDate}
            </if>
            GROUP BY a.order_number, a.order_date
        ) as count
    </select>

    <select id="searchOrderDetailBookInfo" parameterType="String" resultType="com.bookstore.mypage.domain.CartDto">
        SELECT a.book_num, book_title, book_price, book_orderCount, book_thumbUrl, book_pictureUrl
        FROM order_book a LEFT JOIN book b on a.book_num = b.book_num
        WHERE order_number = #{orderNumber}
    </select>

    <select id="searchOrderDetail" parameterType="String" resultMap="OrderDetail">
        SELECT a.order_number, order_totalPrice, order_totalCount, member_rank, book_title, book_price, book_orderCount, book_pictureUrl, book_thumbUrl
        FROM `order` a
                 LEFT JOIN  order_book b ON a.order_number = b.order_number LEFT JOIN book c ON b.book_num = c.book_num
        where a.order_number = #{orderNumber};
    </select>
    <resultMap id="OrderDetail" type="com.bookstore.mypage.domain.PayInfoDto">
        <result column="order_number" property="orderNumber"/>
        <result column="order_totalPrice" property="orderTotalPrice"/>
        <result column="order_totalCount" property="orderTotalBookCount"/>
        <result column="member_rank" property="memberRank"/>
        <collection property="payInfoBook" resultMap="OrderDetailBookInfo"/>
    </resultMap>

    <resultMap id="OrderDetailBookInfo" type="com.bookstore.mypage.domain.CartDto">
        <result column="book_title" property="bookTitle"/>
        <result column="book_price" property="bookPrice"/>
        <result column="book_orderCount" property="bookOrderCount"/>
        <result column="book_pictureUrl" property="bookPictureUrl"/>
        <result column="book_thumbUrl" property="bookThumbUrl"/>
    </resultMap>


</mapper>
